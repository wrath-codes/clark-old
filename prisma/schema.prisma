// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

// USER MODEL

model Users {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  email     String @unique
  password  String

  create_at DateTime @default(now())
  isAdmin   Boolean  @default(false)

  resetPasswordToken   String?
  resetPasswordExpires DateTime?

  @@unique([firstName, lastName])
  @@map("users")
}

// OPERATORS MODEL

model Operators {
  id      String  @id @default(uuid())
  name    String
  slug    String?
  cnpj    String  @unique
  website String?

  address OperatorAddresses?
  login   Logins?
  contact OperatorContacts?
  plans   Plans[]

  @@map("operators")
}

model OperatorAddresses {
  id           String  @id @default(uuid())
  street       String
  number       Int
  complement   String?
  neighborhood String
  city         String
  state        String
  country      String
  zipCode      String
  latitude     Float?
  longitude    Float?

  operator   Operators? @relation(fields: [operatorId], references: [id], onDelete: Cascade)
  operatorId String?    @unique

  @@map("operatorAddresses")
}

model Logins {
  id       String @id @default(uuid())
  username String
  password String

  operator   Operators @relation(fields: [operatorId], references: [id], onDelete: Cascade)
  operatorId String    @unique

  @@map("logins")
}

model OperatorContacts {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  email     String @unique
  cellphone String

  operator   Operators? @relation(fields: [operatorId], references: [id], onDelete: Cascade)
  operatorId String?    @unique

  @@map("operatorContacts")
}

// PLANS MODEL
model Plans {
  id           String    @id @default(uuid())
  name         String
  slug         String?
  reach        PlanReach @default(GRUPO_ESTADOS)
  ans_register String    @unique

  operatorId String?
  operator   Operators? @relation(fields: [operatorId], references: [id], onDelete: Cascade)

  values PlanValues?

  @@map("plans")
}

model PlanValues {
  id String @id @default(uuid())

  age_0_18     Float
  age_19_23    Float
  age_24_28    Float
  age_29_33    Float
  age_34_38    Float
  age_39_43    Float
  age_44_48    Float
  age_49_53    Float
  age_54_58    Float
  age_59_above Float

  planId String @unique
  plan   Plans? @relation(fields: [planId], references: [id], onDelete: Cascade)
}

enum PlanReach {
  MUNICIPIO
  GRUPO_MUNICIPIOS
  ESTADO
  GRUPO_ESTADOS
  NACIONAL
}
